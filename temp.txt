const {conn} = require('./repository/dbConnection');
const {create_user_table_query, alter_user_table_query, create_group_table_query, create_accountGroupRelation_table_query} = require('./repository/dbQueries');

conn.execute(create_user_table_query, (err)=>{
    if(err) throw err;
    console.log("User table created");
})
conn.execute(create_group_table_query, (err)=>{
    if(err) throw err;
    console.log("group table created");
})
conn.execute(create_accountGroupRelation_table_query, (err)=>{
    if(err) throw err;
    console.log("accountGroupRelation table created");
})


CREATE TABLE IF NOT EXISTS nodelogin.accounts (username varchar(100) UNIQUE NOT NULL PRIMARY KEY, password varchar(255) NOT NULL, email varchar(100) NOT NULL, status INT DEFAULT 1) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

//Create account table
CREATE TABLE `accounts` (
  `username` varchar(50) NOT NULL PRIMARY KEY UNIQUE,
  `password` varchar(255) NOT NULL,
  `email` varchar(100) NOT NULL,
  `status` int DEFAULT 1
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4

//Create accGroup table
CREATE TABLE `accGroups` (
  `groupName` varchar(255) NOT NULL PRIMARY KEY UNIQUE
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci


//Create accountGroupRelation table
CREATE TABLE `accountGroupRelation` (
  `fk_username` varchar(100) NOT NULL,
  `fk_groupName` varchar(100) NOT NULL,
  FOREIGN KEY (`fk_username`) REFERENCES `accounts` (`username`),
  FOREIGN KEY (`fk_groupName`) REFERENCES `accgroups` (`groupName`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

//Create application table
CREATE TABLE IF NOT EXISTS application (App_Acronym VARCHAR(200) PRIMARY KEY NOT NULL UNIQUE, App_Description LONG, App_Rnumber INT, App_startDate DATE, App_endDate DATE,  App_permit_Open varchar(100), App_permit_toDoList varchar(100), App_permit_Doing varchar(100), App_permit_Done varchar(100), FOREIGN KEY(App_permit_Open) REFERENCES `accGroups` (`groupName`), FOREIGN KEY(App_permit_toDoList) REFERENCES `accGroups` (`groupName`), FOREIGN KEY(App_permit_Doing) REFERENCES `accGroups` (`groupName`), FOREIGN KEY(App_permit_Done) REFERENCES `accGroups` (`groupName`));


//Create plan table
CREATE TABLE IF NOT EXISTS nodelogin.Plan (Plan_MVP_name VARCHAR(200) UNIQUE PRIMARY KEY NOT NULL, Plan_startDate DATE, Plan_endDAte DATE, Plan_app_acronym VARCHAR(200), FOREIGN KEY(Plan_app_acronym) REFERENCES nodelogin.application (App_Acronym));

//Create task table
CREATE TABLE IF NOT EXISTS nodelogin.Task (Task_name VARCHAR(200) PRIMARY KEY NOT NULL UNIQUE, Task_description LONG, Task_notes LONG, Task_id LONG, Task_plan VARCHAR(200), Task_app_Acronym VARCHAR(200), Task_state VARCHAR(200), Task_creator VARCHAR(200), Task_owner VARCHAR(200), Task_createDate DATE, FOREIGN KEY(Task_plan) REFERENCES nodelogin.plan (Plan_MVP_name), FOREIGN KEY(Task_app_Acronym) REFERENCES nodelogin.application (App_Acronym));

